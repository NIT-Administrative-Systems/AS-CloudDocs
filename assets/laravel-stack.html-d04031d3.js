import{_ as i,M as l,p as r,q as c,R as n,t as s,N as a,V as p,a1 as t}from"./framework-bf3e1922.js";const u="/AS-CloudDocs/assets/laravel-app-dbae07d6.png",d={},k=n("h1",{id:"laravel-stack",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#laravel-stack","aria-hidden":"true"},"#"),s(" Laravel Stack")],-1),h={href:"https://laravel.com/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://laravel.com/docs/8.x/events",target:"_blank",rel:"noopener noreferrer"},m={href:"https://laravel.com/docs/8.x/broadcasting",target:"_blank",rel:"noopener noreferrer"},b=t('<p>Our general pattern for Laravel apps closely mirrors a new out-of-the-box Laravel installation. In cases where we are interacting with APIs heavily, we will make more use of the cache and implement a repository pattern around our models:</p><p><img src="'+u+'" alt="Laravel app structure"></p><h2 id="stack" tabindex="-1"><a class="header-anchor" href="#stack" aria-hidden="true">#</a> Stack</h2><p>Laravel provides most of the application stack.</p><div class="hint-container tip"><p class="hint-container-title">The Administrative Systems Seal of Approval</p><p>These serve as a good set of &quot;default&quot; options for things.</p><p>There may be use-cases where something else is better, but unless &amp; until a justification can be made to use something else, you should draw from this list.</p><p>Using the same libraries will allow AS developers to transfer between projects more easily, as technical competencies developed in one project will be transferrable to other projects.</p></div>',5),_=n("thead",null,[n("tr",null,[n("th",null,"Package"),n("th",null,"Purpose")])],-1),f=n("tr",null,[n("td",null,[s("PostgreSQL "),n("em",null,"(available as Aurora Serverless RDS for PostgreSQL on AWS)")]),n("td",null,"Relational DB")],-1),g=n("tr",null,[n("td",null,"AWS DynamoDB"),n("td",null,"Document DB, session store, cache")],-1),y={href:"https://laravel.com/docs/8.x/eloquent",target:"_blank",rel:"noopener noreferrer"},w=n("td",null,"DB access / ORM",-1),A={href:"https://nit-administrative-systems.github.io/SysDev-laravel-soa/",target:"_blank",rel:"noopener noreferrer"},S=n("td",null,"WebSSO, common API bindings",-1),$={href:"https://docs.guzzlephp.org/en/stable/",target:"_blank",rel:"noopener noreferrer"},x=n("td",null,"HTTP client",-1),L={href:"https://carbon.nesbot.com/docs/",target:"_blank",rel:"noopener noreferrer"},P=n("td",null,"DateTime & timezone manipulation",-1),I={href:"https://github.com/google/libphonenumber#third-party-ports",target:"_blank",rel:"noopener noreferrer"},T=n("td",null,"Phone number info & validation",-1),R={href:"https://laravel.com/docs/8.x/broadcasting#pusher-channels",target:"_blank",rel:"noopener noreferrer"},E=n("td",null,"Websocket driver for broadcasting",-1),D={href:"https://laravel.com/docs/8.x/blade",target:"_blank",rel:"noopener noreferrer"},B=n("td",null,"Templating engine",-1),C={href:"https://nit-administrative-systems.github.io/northwestern-laravel-ui",target:"_blank",rel:"noopener noreferrer"},H=n("td",null,"Bootstrap 4 theme & layouts",-1),j={href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"},q=n("td",null,"Front-end package management",-1),U={href:"https://getbootstrap.com/",target:"_blank",rel:"noopener noreferrer"},W=n("sup",null,"*",-1),V=n("td",null,"General purpose UI toolkit",-1),M={href:"https://fontawesome.com/",target:"_blank",rel:"noopener noreferrer"},F=n("sup",null,"*",-1),N=n("td",null,"Icons",-1),z={href:"https://phpunit.de/",target:"_blank",rel:"noopener noreferrer"},Q=n("td",null,"Unit & feature testing",-1),J={href:"https://laravel-livewire.com/",target:"_blank",rel:"noopener noreferrer"},O=n("td",null,"Rich UI",-1),G={href:"https://laravel.com/docs/8.x/dusk",target:"_blank",rel:"noopener noreferrer"},X=n("em",null,"(Selenium)",-1),Y=n("td",null,"Functional & E2E testing",-1),K={href:"https://github.com/getsentry/sentry-php",target:"_blank",rel:"noopener noreferrer"},Z=n("td",null,"Exception logging (backend)",-1),nn={href:"https://www.npmjs.com/package/@sentry/browser",target:"_blank",rel:"noopener noreferrer"},sn=n("td",null,"Exception logging (frontend)",-1),an={href:"https://laravel.com/docs/8.x/horizon",target:"_blank",rel:"noopener noreferrer"},en=n("td",null,"Queues & async processing (on-prem)",-1),tn={href:"https://github.com/laravel/vapor-ui",target:"_blank",rel:"noopener noreferrer"},on=n("td",null,"Queues & async processing (AWS)",-1),ln=n("tr",null,[n("td",null,"Apache & PHP-FPM"),n("td",null,"On-prem deployment")],-1),pn={href:"https://vapor.laravel.com/",target:"_blank",rel:"noopener noreferrer"},rn=n("td",null,"AWS serverless deployment",-1),cn=t('<p><small><sup>*</sup> The <code>northwestern-laravel-ui</code> package will set up Bootstrap &amp; Font Awesome.</small></p><p><small>â€  The <code>northwestern-laravel-ui</code> package includes Sentry&#39;s browser SDK and will auto-configure it based on the settings for <code>sentry-php</code>.</small></p><h2 id="frontend" tabindex="-1"><a class="header-anchor" href="#frontend" aria-hidden="true">#</a> Frontend</h2>',3),un={href:"https://www.northwestern.edu/templates/v3/",target:"_blank",rel:"noopener noreferrer"},dn=n("p",null,"Bootstrap is our tool of choice here because it is providing a large number of ready-made UI components that have been tested cross-browser & for accessibility. This allows developers to focus on the custom business logic for their application instead of CSS arcana.",-1),kn=n("p",null,"For AJAX-y things you'd typically achieve with jQuery, instead consider Livewire. Livewire enables us to write rich AJAX-y UIs entirely in PHP and Blade. This makes the application more testable (PHPUnit can test this code), and transfers competency with PHP & Blade to the frontend instead of requiring you to write JavaScript.",-1),hn={href:"http://localhost:8080/AS-CloudDocs/development/frontend-stacks.html#phasing-out-jquery",target:"_blank",rel:"noopener noreferrer"},vn=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"Easing in to Livewire"),n("p",null,"Livewire is not a replacement for a frontend framework. It does not take control of the entire frontend."),n("p",null,"You can begin adding Livewire to an existing Laravel application gradually. If a developer is working on a new feature, they can add a Livewire component without disrupting any of the existing functionality.")],-1),mn=n("p",null,"Livewire is not appropriate for all tasks jQuery is used for. If you need to do something purely client-side in the browser, it is recommended to write 'vanilla' JavaScript without depending on any additional libraries/frameworks.",-1),bn=n("h2",{id:"repositories",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#repositories","aria-hidden":"true"},"#"),s(" Repositories")],-1),_n={href:"https://laravel.com/docs/8.x/eloquent",target:"_blank",rel:"noopener noreferrer"},fn=n("code",null,"save()",-1),gn=n("code",null,"find()",-1),yn=n("p",null,"In some situations, it is better to hide the details of data storage with a repository class:",-1),wn=n("ul",null,[n("li",null,"The logic is complicated and thus should not live in your controller"),n("li",null,"The model isn't stored in your database (and thus is not an Eloquent model)")],-1),An={href:"https://en.wikipedia.org/wiki/Data_access_object",target:"_blank",rel:"noopener noreferrer"},Sn=t(`<p>A repository method should not be aware of any validation logic, business logic, roles, or privileges. All of the data it needs should be validated elsewhere &amp; passed in. The method should only be invoked if it is appropriate to do so.</p><p>The only logic included in a repository should be related to persisting data -- e.g. if we specify <code>column_a</code>, then <code>column_b</code> should be nulled out, or if <code>column_c</code> has changed we should add an entry to <code>audit_log</code>.</p><p>We keep the repositories in <code>app/Repositories</code>. Methods should return the relevant model w/ its updates. Whenever possible, complex write operations should be wrapped in a transaction.</p><details class="hint-container details"><summary>Eloquent Repository Example</summary><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Repositories</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Carbon<span class="token punctuation">\\</span>Carbon</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Application</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Status</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ExampleRepository</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">updateStatus</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Application</span> <span class="token variable">$app</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Status</span> <span class="token variable">$status</span><span class="token punctuation">,</span> <span class="token variable">$user_id</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Application</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$app</span><span class="token punctuation">,</span> <span class="token variable">$status</span><span class="token punctuation">,</span> <span class="token variable">$user_id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">associate</span><span class="token punctuation">(</span><span class="token variable">$status</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token variable">$milestone_at_column</span> <span class="token operator">=</span> <span class="token variable">$status</span><span class="token operator">-&gt;</span><span class="token property">milestone_timestamp_column</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$milestone_at_column</span> <span class="token operator">!=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token variable">$milestone_at_column</span> <span class="token operator">=</span> <span class="token class-name static-context">Carbon</span><span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">$milestone_by_user_column</span> <span class="token operator">=</span> <span class="token variable">$status</span><span class="token operator">-&gt;</span><span class="token property">milestone_track_user_id_column</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$milestone_by_user_column</span> <span class="token operator">!=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token variable">$milestone_by_user_column</span> <span class="token operator">=</span> <span class="token variable">$user_id</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Update the updated_at timestamp on the underlying app</span>
            <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token property">application</span><span class="token operator">-&gt;</span><span class="token function">touch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>API Repository Example</summary><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Repositories</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>API<span class="token punctuation">\\</span>ExternalAPI</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Application</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Status</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ExampleRepository</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token variable">$api</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ExternalAPI</span> <span class="token variable">$api</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">api</span> <span class="token operator">=</span> <span class="token variable">$api</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Application</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Logic for re-trying &amp; auth should live in your API binding class</span>
        <span class="token variable">$raw_data</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">api</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Hydrate &amp; return a model</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Application</span><span class="token punctuation">(</span><span class="token variable">$raw_data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">updateStatus</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Application</span> <span class="token variable">$app</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Status</span> <span class="token variable">$status</span><span class="token punctuation">,</span> <span class="token variable">$user_id</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Application</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">api</span><span class="token operator">-&gt;</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;status_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$status</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="deploying" tabindex="-1"><a class="header-anchor" href="#deploying" aria-hidden="true">#</a> Deploying</h2><p>Laravel apps can be deployed on-premise (legacy applications) or on AWS.</p><p>When on-prem, the servers are Cyberinfrastructure-supported RedHat Enterprise Linux VMs. The latest version of PHP available in the RedHat Software Collections (RHSCL) should be used.</p>`,8);function $n(xn,Ln){const e=l("ExternalLinkIcon"),o=l("RouterLink");return r(),c("div",null,[k,n("p",null,[n("a",h,[s("Laravel"),a(e)]),s(" is an excellent choice for cloud applications. It is a modern framework with "),n("a",v,[s("advanced"),a(e)]),s(),n("a",m,[s("features"),a(e)]),s(", and it's easy to deploy on AWS with "),a(o,{to:"/infrastructure/vapor.html"},{default:p(()=>[s("Vapor")]),_:1}),s(".")]),b,n("table",null,[_,n("tbody",null,[f,g,n("tr",null,[n("td",null,[n("a",y,[s("Eloquent"),a(e)])]),w]),n("tr",null,[n("td",null,[n("a",A,[s("laravel-soa"),a(e)])]),S]),n("tr",null,[n("td",null,[n("a",$,[s("Guzzle"),a(e)])]),x]),n("tr",null,[n("td",null,[n("a",L,[s("Carbon"),a(e)])]),P]),n("tr",null,[n("td",null,[n("a",I,[s("libphonenumber"),a(e)])]),T]),n("tr",null,[n("td",null,[n("a",R,[s("Pusher Channels"),a(e)])]),E]),n("tr",null,[n("td",null,[n("a",D,[s("Blade"),a(e)])]),B]),n("tr",null,[n("td",null,[n("a",C,[s("northwestern-laravel-ui"),a(e)])]),H]),n("tr",null,[n("td",null,[n("a",j,[s("Yarn"),a(e)])]),q]),n("tr",null,[n("td",null,[n("a",U,[s("Bootstrap 4"),a(e)]),s(),W]),V]),n("tr",null,[n("td",null,[n("a",M,[s("Font Awesome"),a(e)]),s(),F]),N]),n("tr",null,[n("td",null,[n("a",z,[s("PHPUnit"),a(e)])]),Q]),n("tr",null,[n("td",null,[n("a",J,[s("Livewire"),a(e)])]),O]),n("tr",null,[n("td",null,[n("a",G,[s("Laravel Dusk"),a(e)]),s(),X]),Y]),n("tr",null,[n("td",null,[n("a",K,[s("sentry-php"),a(e)])]),Z]),n("tr",null,[n("td",null,[n("a",nn,[s("@sentry/browser"),a(e)]),s(" â€ ")]),sn]),n("tr",null,[n("td",null,[n("a",an,[s("Horizon"),a(e)]),s(" with Redis")]),en]),n("tr",null,[n("td",null,[n("a",tn,[s("vapor-ui"),a(e)]),s(" with Amazon SQS")]),on]),ln,n("tr",null,[n("td",null,[n("a",pn,[s("Laravel Vapor"),a(e)])]),rn])])]),cn,n("p",null,[s("For applications, this stack uses Bootstrap with an NU theme. This does not try to replicate the look of the "),n("a",un,[s("NU Department Templates"),a(e)]),s(", but still gives you an obviously-NU-branded look & feel.")]),dn,kn,n("p",null,[s("Note that "),n("a",hn,[s("the use of jQuery should be phased out"),a(e)]),s(" across all applications.")]),vn,mn,bn,n("p",null,[s("In a normal Laravel app, you are assumed to have a relational database. "),n("a",_n,[s("Eloquent"),a(e)]),s(" is an active record ORM, so models encapsulate both your domain models (e.g. attributes & method you add) and the data storage logic ("),fn,s(", "),gn,s(", etc).")]),yn,wn,n("p",null,[s("If you have used Hibernate in Java, a repository is essentially a "),n("a",An,[s("data access object"),a(e)]),s(": a dedicated class that reads & writes models from storage. The storage could be anything: a database, an API, or a cache. The model and all of its business logic is a separate object that you pass in & get out of the repository.")]),Sn,n("p",null,[s("For cloud deployments, we use Laravel Vapor to deploy onto AWS. Please see the article on "),a(o,{to:"/infrastructure/vapor.html"},{default:p(()=>[s("Vapor under the infrastructure section")]),_:1}),s(" for more information about deploying with Vapor.")])])}const In=i(d,[["render",$n],["__file","laravel-stack.html.vue"]]);export{In as default};
