import{_ as e,p as a,q as n,a1 as s}from"./framework-bf3e1922.js";const i={},o=s(`<h1 id="lockfile-merge-conflict-resolution" tabindex="-1"><a class="header-anchor" href="#lockfile-merge-conflict-resolution" aria-hidden="true">#</a> Lockfile Merge Conflict Resolution</h1><p>This appendix has procedures for resolving merge conflicts in package manager lockfiles.</p><p>If the <code>package.lock</code>, <code>yarn.lock</code>, or similar file has been updated by several pull requests around the same time, somebody&#39;s PR will almost certainly end up with a conflict. These files are usually huge, auto-generated, and very sensitive to changes.</p><p>For example, if somebody installed v1.0.1 of a thing, it&#39;s possible that somebody else has inadvertently updated it to v1.0.2 when installing <em>their</em> new dependency. This will produce a large amount of changed lines that conflict and have no clear resolution.</p><p>You should not attempt to resolve these conflicts by editing the lockfiles. Instead, you can perform the merge, check the lockfile from <code>develop</code> out, and then let the package manager regenerate it.</p><h2 id="prerequisite" tabindex="-1"><a class="header-anchor" href="#prerequisite" aria-hidden="true">#</a> Prerequisite</h2><p>For all package managers, begin by checking out the pull request with the conflict. Merge the default branch (typically <code>develop</code>) and let the conflict happen.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> fetch
<span class="token function">git</span> checkout ABC-1234 <span class="token comment"># the branch at issue</span>
<span class="token function">git</span> pull
<span class="token function">git</span> merge origin/develop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then, take a look at the PR&#39;s diff and note what the developer was trying to install or update. If this PR was only updating a single package, you may want to be careful and targeted about how you regenerate the lockfile. If there were many packages, a general update-of-everything may be an appropriate strategy.</p><p>After regenerating the lock file, you should be able to mark it as resolved and complete the merge. Push the merge commit back up to GitHub when you&#39;re done!</p><h2 id="yarn-1-x" tabindex="-1"><a class="header-anchor" href="#yarn-1-x" aria-hidden="true">#</a> Yarn 1.x</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> restore <span class="token parameter variable">--source</span> origin/develop -- yarn.lock

<span class="token comment"># For a general update of all packages:</span>
<span class="token function">yarn</span> upgrade 

<span class="token comment"># Or, something more targeted, specify the package name (or names, you can list a bunch for one upgrade command):</span>
<span class="token function">yarn</span> upgrade foo-package
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="composer" tabindex="-1"><a class="header-anchor" href="#composer" aria-hidden="true">#</a> Composer</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> restore <span class="token parameter variable">--source</span> origin/develop -- composer.lock

<span class="token comment"># For a general update of all packages:</span>
<span class="token function">composer</span> upgrade 

<span class="token comment"># Or, something more targeted, specify the package name (or names, you can list a bunch for one upgrade command):</span>
<span class="token function">composer</span> upgrade foo/package
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),t=[o];function l(r,c){return a(),n("div",null,t)}const p=e(i,[["render",l],["__file","appendix-lockfile-resolution.html.vue"]]);export{p as default};
