(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{396:function(e,t,a){"use strict";a.r(t);var s=a(41),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"terraform-state-move"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#terraform-state-move"}},[e._v("#")]),e._v(" Terraform State Move")]),e._v(" "),a("p",[e._v("Terraform can move resources around within the state file, which means you can refactor terraform without being forced to recreate the resources. For example, this is useful for converting individual resources or a "),a("code",[e._v("count")]),e._v(" resource to a "),a("code",[e._v("for_each")]),e._v(" resource.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("terraform state mv")]),e._v(" command modifies the state and must be executed by an AWS Account Admin.")]),e._v(" "),a("ol",[a("li",[e._v("(Developer) Refactor your Terraform in a new branch. On your local machine, login with the "),a("code",[e._v("aws-adfs")]),e._v(" utility and verify "),a("code",[e._v("terraform plan")]),e._v(" will refactor the resources as desired but would destroy/recreate the resources. Don't merge and deploy/"),a("code",[e._v("apply")]),e._v(" the changes yet.")]),e._v(" "),a("li",[e._v("(Admin) Locally checkout the branch with the refactored terraform. Locally login to AWS account with "),a("code",[e._v("aws-adfs")]),e._v(", with admin rights.")]),e._v(" "),a("li",[e._v("(Admin) Locally, in the "),a("code",[e._v("iac/{env}")]),e._v(" directory corresponding to the state file, run "),a("code",[e._v("terraform init")]),e._v(".")]),e._v(" "),a("li",[e._v("(Admin) Then, for each individual resource to refactor/move within the state, run a "),a("code",[e._v("terraform state mv")]),e._v(" command with the source/destination in the state file.\ne.g.")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Example")]),e._v("\nterraform state "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'module.example.aws_s3_bucket.an_individual_bucket'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'module.example.aws_s3_bucket.fc_bucket[\"a-foreach-bucket\"]'")]),e._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("Look at the destroy/create for each resource in the "),a("code",[e._v("terraform plan")]),e._v(" output to get the correct source and destination for each resource's mv command.")])]),e._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[e._v("(Developer) Once all of the moves within the state file are complete, locally verify that "),a("code",[e._v("terraform plan")]),e._v(" no longer shows the recreation of all of those resources (because the state file now matches the refactored IaC).")]),e._v(" "),a("li",[e._v("(Developer) Merge the IaC code change and deploy (should be no changes).")])]),e._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[e._v("Example Use Case: Refactor individual s3 bucket resources to a for_each resource")]),e._v(" "),a("h3",{attrs:{id:"scenario"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenario"}},[e._v("#")]),e._v(" Scenario")]),e._v(" "),a("p",[e._v("There are 18 buckets in one module, declared as individual resources with the same configuration. Terraform did not add the "),a("code",[e._v("for_each")]),e._v(" feature until awhile after this IaC was created. In order to more easily maintain those s3 buckets (e.g. change the configuration without updating in 18 places) and more cleanly add outputs for the bucket data, it would be preferable to convert them from being individually declared in the IaC to a single for_each resource (which references a variable with a list of bucket names).")]),e._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# before: many individual declarations")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("resource "),a("span",{pre:!0,attrs:{class:"token type variable"}},[e._v('"aws_s3_bucket"')])]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"first_example_bucket"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    ... \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("resource "),a("span",{pre:!0,attrs:{class:"token type variable"}},[e._v('"aws_s3_bucket"')])]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"second_example_bucket"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    ... \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("resource "),a("span",{pre:!0,attrs:{class:"token type variable"}},[e._v('"aws_s3_bucket"')])]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"third_example_bucket"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    ... \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# after: single for_each declaration ")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("resource "),a("span",{pre:!0,attrs:{class:"token type variable"}},[e._v('"aws_s3_bucket"')])]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"all_example_buckets"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("for_each")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" toset(var.example_bucket_names)\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("bucket")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("each"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")])]),e._v("-"),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token type variable"}},[e._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")])]),e._v('"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("acl")]),e._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"private"')]),e._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("tags")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" local.tags\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h3",{attrs:{id:"problem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#problem"}},[e._v("#")]),e._v(" Problem")]),e._v(" "),a("p",[e._v("Moving individual resources (s3 buckets) to a for_each resource will destroy and recreate them all on "),a("code",[e._v("terraform apply")]),e._v(" because they have to be referenced differently in the state file as a for-each.")]),e._v(" "),a("p",[e._v("If the s3 buckets are already live and contain objects you don't want to lose, recreating all of the buckets is problematic.")]),e._v(" "),a("h3",{attrs:{id:"solution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solution"}},[e._v("#")]),e._v(" Solution")]),e._v(" "),a("p",[e._v("Use "),a("code",[e._v("terraform state mv")]),e._v(" to change each bucket's reference in the state file to a for-each, in order to refactor without recreating.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Example")]),e._v("\nterraform state "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'module.example.aws_s3_bucket.first_example_bucket'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'module.example.aws_s3_bucket.all_example_buckets[\"first-example-bucket\"]'")]),e._v("\n")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);