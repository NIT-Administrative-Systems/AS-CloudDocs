(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{377:function(e,t,n){"use strict";n.r(t);var r=n(41),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"suggested-learning-path"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#suggested-learning-path"}},[e._v("#")]),e._v(" Suggested Learning Path")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("High-level overview of GitHub Actions"),n("OutboundLink")],1),e._v(" "),n("ul",[n("li",[e._v("Key Concepts\n"),n("ul",[n("li",[n("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#workflows",target:"_blank",rel:"noopener noreferrer"}},[e._v("Workflows"),n("OutboundLink")],1),e._v(" - Automated process, such as build and deploy an application")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#events",target:"_blank",rel:"noopener noreferrer"}},[e._v("Events"),n("OutboundLink")],1),e._v(" - Casue workflows to execute. "),n("a",{attrs:{href:"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows",target:"_blank",rel:"noopener noreferrer"}},[e._v("Event Types"),n("OutboundLink")],1),e._v(" include:\n"),n("ul",[n("li",[e._v("Scheduled like CRON")]),e._v(" "),n("li",[e._v("Manually create by clicking a button")]),e._v(" "),n("li",[e._v("Triggered by an action ex. opening a pull request")])])]),e._v(" "),n("li",[n("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#jobs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jobs"),n("OutboundLink")],1),e._v(" - Set of steps comprising a logic unit of work in your process.\n"),n("ul",[n("li",[e._v("Can have more than one in a workflow")]),e._v(" "),n("li",[e._v("Can run serially or in parellel")]),e._v(" "),n("li",[e._v("An example might be a job that runs tests")])])]),e._v(" "),n("li",[n("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("Actions"),n("OutboundLink")],1),e._v(" - Custom application that provides functionality, can write your own or use pre-built ones from the "),n("a",{attrs:{href:"https://github.com/marketplace?type=actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("Marketplace"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Step -")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#runners",target:"_blank",rel:"noopener noreferrer"}},[e._v("Runners"),n("OutboundLink")],1),e._v(" - Server virtua/hosted/on-prem where the workflow is executed")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://docs.github.com/en/actions/security-guides/encrypted-secrets",target:"_blank",rel:"noopener noreferrer"}},[e._v("Secrets"),n("OutboundLink")],1),e._v(" - Sensitive environment variables like passwords, API keys, and tokens.  GitHub provides a mechanism for securely secrets with your source code.  Secrets can be stored at the organization, repository and environment level.  Once created secrets can then be used in your workflows.")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment",target:"_blank",rel:"noopener noreferrer"}},[e._v("Environments"),n("OutboundLink")],1),e._v(" - Are collections of settings (allowed branches, secrets, and protection rules.)  An environment in GitHub likely correlates to the environment your workflow will act against.\n"),n("ul",[n("li",[e._v("By using a named environment secret you can have a single workflow file, that uses different secrets based on the environment the workflow is executed in.")])])])])])])]),e._v(" "),n("li",[n("a",{attrs:{href:"https://docs.github.com/en/actions/quickstart",target:"_blank",rel:"noopener noreferrer"}},[e._v("Quickstart"),n("OutboundLink")],1),e._v(" - Create your first workflow")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://lab.github.com/githubtraining/github-actions:-hello-world",target:"_blank",rel:"noopener noreferrer"}},[e._v("Write your own action"),n("OutboundLink")],1),e._v(" - Chances are you will not often need to do this, but understanding how the actions you are using a built will give you a better understanding of how to use them and why something might not work as expected.")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://lab.github.com/githubtraining/github-actions:-continuous-integration",target:"_blank",rel:"noopener noreferrer"}},[e._v("Continuous Integration"),n("OutboundLink")],1),e._v(" - This will guide you in creating your first workflow.")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://lab.github.com/githubtraining/github-actions:-using-github-script",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Script"),n("OutboundLink")],1),e._v(" - Create a workflow that uses the GitHub script action (more about this below).")])]),e._v(" "),n("hr"),e._v(" "),n("p",[n("code"),n("br"),e._v(" "),n("code")]),e._v(" "),n("h2",{attrs:{id:"comparisons-with-jenkins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#comparisons-with-jenkins"}},[e._v("#")]),e._v(" Comparisons with Jenkins")]),e._v(" "),n("ul",[n("li",[e._v("Both allow creating custom/reusable functionality. Jenkins often accomplishes this via plug-ins in GitHub they are Marketplace Actions, Composite & Reuasable Workflows")]),e._v(" "),n("li",[e._v("Both support describing a process in a document that can be checked into source control.  In Jenkins they are called pipelines (Jenkinsfile), GitHub Actions calls them workflows (.gitub/workflows/{your-workflow}.yml)")]),e._v(" "),n("li",[e._v("Both support timed and manually triggered jobs.  Jenkins can be triggered by checking code into GitHub (and can likely do more via Plug-ins); however, GitHub Actions natively supports a more diverse and granular set of events, and seems better suited for automations")]),e._v(" "),n("li",[e._v('Both Jenkins and GitHub Actions support "secrets".  GitHub\'s approach seems more secure.')])]),e._v(" "),n("hr"),e._v(" "),n("p",[n("code"),n("br"),e._v(" "),n("code")]),e._v(" "),n("h2",{attrs:{id:"tips-resources-useful-actions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tips-resources-useful-actions"}},[e._v("#")]),e._v(" Tips, Resources, & Useful Actions")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/actions/checkout",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Checkout Action"),n("OutboundLink")],1),e._v(" - Checks your code out of your repo so it can be used in your workflow.  Likely you will use this in most workflows.")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/hashicorp/setup-terraform",target:"_blank",rel:"noopener noreferrer"}},[e._v("Terraform Setup"),n("OutboundLink")],1),e._v(" - Sets up the terraform CLI making it easy to execute your IAC")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/actions/cache",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Cache Action"),n("OutboundLink")],1),e._v(" - Allows you to cache artifacts across runs in the same branch.  Useful to speed up your builds.")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/actions/github-script",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Script Action"),n("OutboundLink")],1),e._v(' - Exposes GitHub\'s RESTful APIs inside a Script block of a workflow "step".  This is very useful for automations\n'),n("ul",[n("li",[n("a",{attrs:{href:"https://docs.github.com/en/rest",target:"_blank",rel:"noopener noreferrer"}},[e._v("RESTful API documentation"),n("OutboundLink")],1),e._v(" - General API documentation")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/octokit/octokit.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("Octokit Documentation"),n("OutboundLink")],1),e._v(" - NodeJS implementation of GitHub RESTful API.")])])]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/actions/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Action Org"),n("OutboundLink")],1),e._v(" - Owner of all the GitHub developed repositories containing Actions related code")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://docs.github.com/en/actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Actions Documentation"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/actions/starter-workflows",target:"_blank",rel:"noopener noreferrer"}},[e._v("Starter/Template Workflows"),n("OutboundLink")],1),e._v(" - Contains templated workflows for common tasks")]),e._v(" "),n("li",[e._v("If you add a Repository Secret with the name ACTIONS_STEP_DEBUG and the value of 'true' this will turn on debugging logs for your Workflows.")]),e._v(" "),n("li",[e._v("YAML is all about indentation, and it is easy to cause yourself headaches due to missing a space.  Use a YAML linter like "),n("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml",target:"_blank",rel:"noopener noreferrer"}},[e._v("this"),n("OutboundLink")],1),e._v(" for VSCode")])])])}),[],!1,null,null,null);t.default=o.exports}}]);