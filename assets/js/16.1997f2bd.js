(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{373:function(e,t,o){"use strict";o.r(t);var r=o(41),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"github-actions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#github-actions"}},[e._v("#")]),e._v(" GitHub Actions")]),e._v(" "),o("p",[e._v("GitHub Actions is a continuous integration and continuous delivery (CI/CD) platform that allows you to automate your build, test, and deployment pipeline. You can create workflows that build and test every pull request to your repository, or deploy merged pull requests to production.")]),e._v(" "),o("p",[e._v("GitHub Actions goes beyond just DevOps and lets you run workflows when other events happen in your repository. For example, you can run a workflow to automatically add the appropriate labels whenever someone creates a new issue in your repository.")]),e._v(" "),o("p",[e._v("GitHub provides Linux, Windows, and macOS virtual machines to run your workflows, or you can host your own self-hosted runners in your own data center or cloud infrastructure.")]),e._v(" "),o("h2",{attrs:{id:"suggested-learning-path"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#suggested-learning-path"}},[e._v("#")]),e._v(" Suggested Learning Path")]),e._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("High-level overview of GitHub Actions"),o("OutboundLink")],1),e._v(" "),o("ul",[o("li",[e._v("Key Concepts\n"),o("ul",[o("li",[o("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#workflows",target:"_blank",rel:"noopener noreferrer"}},[e._v("Workflows"),o("OutboundLink")],1),e._v(" - Automated process, such as build and deploy an application")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#events",target:"_blank",rel:"noopener noreferrer"}},[e._v("Events"),o("OutboundLink")],1),e._v(" - Casue workflows to execute. "),o("a",{attrs:{href:"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows",target:"_blank",rel:"noopener noreferrer"}},[e._v("Event Types"),o("OutboundLink")],1),e._v(" include:\n"),o("ul",[o("li",[e._v("Scheduled like CRON")]),e._v(" "),o("li",[e._v("Manually create by clicking a button")]),e._v(" "),o("li",[e._v("Triggered by an action ex. opening a pull request")])])]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#jobs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jobs"),o("OutboundLink")],1),e._v(" - Set of steps comprising a logic unit of work in your process.\n"),o("ul",[o("li",[e._v("Can have more than one in a workflow")]),e._v(" "),o("li",[e._v("Can run serially or in parellel")]),e._v(" "),o("li",[e._v("An example might be a job that runs tests")])])]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("Actions"),o("OutboundLink")],1),e._v(" - Custom application that provides functionality, can write your own or use pre-built ones from the "),o("a",{attrs:{href:"https://github.com/marketplace?type=actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("Marketplace"),o("OutboundLink")],1)]),e._v(" "),o("li",[e._v("Step -")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#runners",target:"_blank",rel:"noopener noreferrer"}},[e._v("Runners"),o("OutboundLink")],1),e._v(" - Server virtua/hosted/on-prem where the workflow is executed")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.github.com/en/actions/security-guides/encrypted-secrets",target:"_blank",rel:"noopener noreferrer"}},[e._v("Secrets"),o("OutboundLink")],1),e._v(" - Sensitive environment variables like passwords, API keys, and tokens.  GitHub provides a mechanism for securely secrets with your source code.  Secrets can be stored at the organization, repository and environment level.  Once created secrets can then be used in your workflows.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment",target:"_blank",rel:"noopener noreferrer"}},[e._v("Environments"),o("OutboundLink")],1),e._v(" - Are collections of settings (allowed branches, secrets, and protection rules.)  An environment in GitHub likely correlates to the environment your workflow will act against.\n"),o("ul",[o("li",[e._v("By using a named environment secret you can have a single workflow file, that uses different secrets based on the environment the workflow is executed in.")])])])])])])]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.github.com/en/actions/quickstart",target:"_blank",rel:"noopener noreferrer"}},[e._v("Quickstart"),o("OutboundLink")],1),e._v(" - Create your first workflow")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://lab.github.com/githubtraining/github-actions:-hello-world",target:"_blank",rel:"noopener noreferrer"}},[e._v("Write your own action"),o("OutboundLink")],1),e._v(" - Chances are you will not often need to do this, but understanding how the actions you are using a built will give you a better understanding of how to use them and why something might not work as expected.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://lab.github.com/githubtraining/github-actions:-continuous-integration",target:"_blank",rel:"noopener noreferrer"}},[e._v("Continuous Integration"),o("OutboundLink")],1),e._v(" - This will guide you in creating your first workflow.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://lab.github.com/githubtraining/github-actions:-using-github-script",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Script"),o("OutboundLink")],1),e._v(" - Create a workflow that uses the GitHub script action (more about this below).")])]),e._v(" "),o("hr"),e._v(" "),o("h2",{attrs:{id:"comparisons-with-jenkins"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparisons-with-jenkins"}},[e._v("#")]),e._v(" Comparisons with Jenkins")]),e._v(" "),o("ul",[o("li",[e._v("Both allow creating custom/reusable functionality. Jenkins often accomplishes this via plug-ins in GitHub they are Marketplace Actions, Composite & Reuasable Workflows")]),e._v(" "),o("li",[e._v("Both support describing a process in a document that can be checked into source control.  In Jenkins they are called pipelines (Jenkinsfile), GitHub Actions calls them workflows (.gitub/workflows/{your-workflow}.yml)")]),e._v(" "),o("li",[e._v("Both support timed and manually triggered jobs.  Jenkins can be triggered by checking code into GitHub (and can likely do more via Plug-ins); however, GitHub Actions natively supports a more diverse and granular set of events, and seems better suited for automations")]),e._v(" "),o("li",[e._v('Both Jenkins and GitHub Actions support "secrets".  GitHub\'s approach seems more secure.')])]),e._v(" "),o("hr"),e._v(" "),o("h2",{attrs:{id:"tips-resources-useful-actions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tips-resources-useful-actions"}},[e._v("#")]),e._v(" Tips, Resources, & Useful Actions")]),e._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/actions/checkout",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Checkout Action"),o("OutboundLink")],1),e._v(" - Checks your code out of your repo so it can be used in your workflow.  Likely you will use this in most workflows.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/hashicorp/setup-terraform",target:"_blank",rel:"noopener noreferrer"}},[e._v("Terraform Setup"),o("OutboundLink")],1),e._v(" - Sets up the terraform CLI making it easy to execute your IAC")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/actions/cache",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Cache Action"),o("OutboundLink")],1),e._v(" - Allows you to cache artifacts across runs in the same branch.  Useful to speed up your builds.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/actions/github-script",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Script Action"),o("OutboundLink")],1),e._v(' - Exposes GitHub\'s RESTful APIs inside a Script block of a workflow "step".  This is very useful for automations\n'),o("ul",[o("li",[o("a",{attrs:{href:"https://docs.github.com/en/rest",target:"_blank",rel:"noopener noreferrer"}},[e._v("RESTful API documentation"),o("OutboundLink")],1),e._v(" - General API documentation")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/octokit/octokit.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("Octokit Documentation"),o("OutboundLink")],1),e._v(" - NodeJS implementation of GitHub RESTful API.")])])]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/actions/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Action Org"),o("OutboundLink")],1),e._v(" - Owner of all the GitHub developed repositories containing Actions related code")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.github.com/en/actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Actions Documentation"),o("OutboundLink")],1)]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/actions/starter-workflows",target:"_blank",rel:"noopener noreferrer"}},[e._v("Starter/Template Workflows"),o("OutboundLink")],1),e._v(" - Contains templated workflows for common tasks")]),e._v(" "),o("li",[e._v("If you add a Repository Secret with the name ACTIONS_STEP_DEBUG and the value of 'true' this will turn on debugging logs for your Workflows.")]),e._v(" "),o("li",[e._v("YAML is all about indentation, and it is easy to cause yourself headaches due to missing a space.  Use a YAML linter like "),o("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml",target:"_blank",rel:"noopener noreferrer"}},[e._v("this"),o("OutboundLink")],1),e._v(" for VSCode")])]),e._v(" "),o("hr"),e._v(" "),o("h2",{attrs:{id:"reusable-workflows-and-custom-nu-actions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#reusable-workflows-and-custom-nu-actions"}},[e._v("#")]),e._v(" Reusable Workflows and Custom NU Actions")]),e._v(" "),o("p",[e._v("Non-authoratative list of NUIT developed workflows and actions that perform common actions")]),e._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/NIT-Administrative-Systems/aws-secrets-sync-action",target:"_blank",rel:"noopener noreferrer"}},[e._v("aws-secrets-sync-action"),o("OutboundLink")],1),e._v(" Custom action to add secrets to AWS Parameter Store after successfully executing IAC")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/NIT-Administrative-Systems/ado-reusable-workflows-terraform",target:"_blank",rel:"noopener noreferrer"}},[e._v("ado-reusable-workflows-terraform"),o("OutboundLink")],1),e._v(" Reusable workflow that performs the common steps of executing terraform IAC as part of a PR or Build process")])])])}),[],!1,null,null,null);t.default=n.exports}}]);