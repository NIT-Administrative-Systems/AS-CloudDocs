import{_ as e,p as t,q as i,a1 as o}from"./framework-bf3e1922.js";const a={},s=o('<h1 id="policy" tabindex="-1"><a class="header-anchor" href="#policy" aria-hidden="true">#</a> Policy</h1><p>These policies govern the use of the Northwestern IT GitHub organization.</p><h2 id="secrets" tabindex="-1"><a class="header-anchor" href="#secrets" aria-hidden="true">#</a> Secrets</h2><p>No secrets should be committed to a Github repository. Secrets include username/passwords, API keys, session tokens, or anything else that can be used to access resources.</p><p>In some limited cases, there are API keys that are not considered secret. Things that are intended to be available to client-side Javascript code, like a Sentry DSN, <em>may</em> be committed. It is recommended to inject environment-specific configuration (like the aforementioned sentry DSN) into your app instead of commit it to the codebase.</p><p>If a secret is inadvertently committed and pushed to Github, it cannot be removed -- rewriting the repository history will not remove it from the reflog on Github&#39;s side. Your only option is to immediately change the secret in any systems that utilize it.</p><h2 id="integrations" tabindex="-1"><a class="header-anchor" href="#integrations" aria-hidden="true">#</a> Integrations</h2><p>There are tons of services that will integrate with GitHub to assist in testing, code review, coding style enforcement, error manegement, and more.</p><p>Integrations available via the GitHub marketplace can be enabled. A list of repositories should be provided so the integration can be authorized to use those specific repositories.</p><p>3rd party integrations with GitHub (not via the marketplace) are typically done with OAuth. We cannot enable these integrations; the GitHub OAuth permission model will grant access to all private repositories in the organization.</p>',10),r=[s];function n(c,h){return t(),i("div",null,r)}const l=e(a,[["render",n],["__file","policies.html.vue"]]);export{l as default};
